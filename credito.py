# -*- coding: utf-8 -*-
"""Credito.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qVMgLqmvviiHQjlghVhF31EYao6xezAa
"""

import pandas as pd
import pickle
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split

df = pd.read_csv('/content/drive/MyDrive/Machine Learning e Data Science com Python de A aÌ€ Z/Bases de dados/credit_data.csv')

df.shape

df.isnull().sum()

df['age'].fillna(df['age'].mean(), inplace=True)
media = df['age'].mean()

df.loc[df['age'] < 0, 'age'] = media

df['age'].min()

df.columns

x_df_credit = df.iloc[:, 1:4].values

x_df_credit

x_df_credit.shape

type(x_df_credit)

y_df_credit = df.iloc[:, 4].values

y_df_credit

x_df_credit

x_df_credit[:,0].min(), x_df_credit[:,1].min(), x_df_credit[:,2].min()

x_df_credit[:,0].max(), x_df_credit[:,1].max(), x_df_credit[:,2].max()

scaler_credit = StandardScaler()
x_df_credit = scaler_credit.fit_transform(x_df_credit)

x_df_credit.shape

x_df_credit

x_df_treinamento, x_df_teste, y_df_treinamento, y_df_teste = train_test_split(x_df_credit, y_df_credit, test_size=0.25, random_state=0)

x_df_treinamento.shape

from sklearn.tree import DecisionTreeClassifier

floresta_randomica_credit = RandomForestClassifier(n_estimators=40 ,criterion='entropy', random_state = 0)

floresta_randomica_credit.fit(x_df_treinamento, y_df_treinamento)

nova_previsao = floresta_randomica_credit.predict(x_df_teste)

accuracy_score(y_credit_teste, nova_previsao)